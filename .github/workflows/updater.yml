# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Updater"
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
permissions:
  contents: "write"
concurrency:
  group: "scan-virus-ghaction-updater"
  cancel-in-progress: false
jobs:
  main:
    name: "Main"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Setup PowerShell Toolkit"
        uses: "hugoalh-studio/setup-powershell-toolkit-ghaction@v2.0.0"
        with:
          version: "^2.1.0"
      - name: "Checkout Repository Branch `base`"
        uses: "actions/checkout@v4.1.1"
        with:
          ref: "base"
          path: "base"
      - name: "Checkout Repository Branch `main`"
        uses: "actions/checkout@v4.1.1"
        with:
          ref: "main"
          path: "main"
      - name: "Config Git"
        run: |
          git --no-pager config --global 'user.name' 'github-actions'
          git --no-pager config --global 'user.email' 'github-actions@users.noreply.github.com'
        shell: "pwsh"
      - name: "Set Branch Path As Environment Variable"
        run: |
          Import-Module -Name 'hugoalh.GitHubActionsToolkit' -Scope 'Local'
          Set-GitHubActionsEnvironmentVariable -Name 'SVGHAA_PATH_BASE' -Value (Join-Path -Path $Env:GITHUB_WORKSPACE -ChildPath 'base')
          Set-GitHubActionsEnvironmentVariable -Name 'SVGHAA_PATH_MAIN' -Value (Join-Path -Path $Env:GITHUB_WORKSPACE -ChildPath 'main')
        shell: "pwsh"
      - name: "Pull File From Branch `base` To Branch `main`"
        run: |
          Get-ChildItem -LiteralPath $Env:SVGHAA_PATH_BASE -Recurse -Force -File |
            Where-Object -FilterScript { $_.FullName -inotmatch "^$([RegEx]::Escape((Join-Path -Path $Env:SVGHAA_PATH_BASE -ChildPath '.git')))[\\/]" } |
            ForEach-Object -Process {
              Copy-Item -LiteralPath $_.FullName -Destination ($_.FullName -ireplace "^$([RegEx]::Escape($Env:SVGHAA_PATH_BASE))", $Env:SVGHAA_PATH_MAIN) -Force -Confirm:$False
            }
        shell: "pwsh"
      - name: "Update Assets"
        id: "update-assets"
        run: |
          pwsh -NonInteractive ./updater.ps1
        working-directory: "${{env.SVGHAA_PATH_MAIN}}"
      - name: "Pull File From Branch `main` To Branch `base`"
        run: |
          Get-ChildItem -LiteralPath $Env:SVGHAA_PATH_MAIN -Recurse -Force -File |
            Where-Object -FilterScript { $_.FullName -imatch "[\\/]index\.tsv$" } |
            ForEach-Object -Process {
              Copy-Item -LiteralPath $_.FullName -Destination ($_.FullName -ireplace "^$([RegEx]::Escape($Env:SVGHAA_PATH_MAIN))", $Env:SVGHAA_PATH_BASE) -Force -Confirm:$False
            }
        shell: "pwsh"
      - name: "Update Repository Branch `main`"
        run: |
          [String]$Diff = git --no-pager diff --minimal --no-color --numstat |
            Join-String -Separator "`n"
          If ($Diff.Length -gt 0) {
            git --no-pager add --all
            git --no-pager commit --message="Update assets on ${{steps.update-assets.outputs.timestamp}}"
            git --no-pager push
          }
        shell: "pwsh"
        working-directory: "${{env.SVGHAA_PATH_MAIN}}"
      - name: "Update Repository Branch `base`"
        run: |
          [String]$Diff = git --no-pager diff --minimal --no-color --numstat |
            Join-String -Separator "`n"
          If ($Diff.Length -gt 0) {
            git --no-pager add --all
            git --no-pager commit --message="Update assets on ${{steps.update-assets.outputs.timestamp}}"
            git --no-pager push
          }
        shell: "pwsh"
        working-directory: "${{env.SVGHAA_PATH_BASE}}"
